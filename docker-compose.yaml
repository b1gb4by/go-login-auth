version: "3.8"

services:
  api:
    build:
      context: .
      target: builder
      dockerfile: build/api/Dockerfile
    container_name: go-login-auth-api
    image: go-login-auth-api
    ports:
      - "${API_PORT}:${API_PORT}"
    volumes:
      - ./api:/go/src/app
    env_file:
      - ".env"
    depends_on:
      - db
    tty: true
    links:
      - smtp
#   ui:
#     build:
#       context: .
#       dockerfile: build/ui/Dockerfile
#     container_name: go-login-auth-ui
#     image: go-login-auth-ui
#     ports:
#       - "${APP_PORT}:${APP_PORT}"
#     volumes:
#       - ./ui:/app
#     command: npm run serve
  db:
    build:
      context: .
      dockerfile: build/db/Dockerfile
    container_name: go-login-auth-db
    image: go-login-auth-db
    environment: 
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      TZ: ${MYSQL_TZ}
    volumes:
      - ./build/db/data:/var/lib/mysql
      - ./build/db/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./build/db/sql:/docker-entrypoint-initdb.d
    ports:
      - "${MYSQL_PORT}:${MYSQL_PORT}"
  db_client:
    build:
      context: .
      dockerfile: build/db_client/Dockerfile
    container_name: go-login-auth-db-client
    image: go-login-auth-db-client
    links:
      - db
    ports:
      - "${DB_CLIENT_PORT}:80"
    volumes:
      - ./build/db_client/sessions:/sessions
  smtp:
    build:
      context: .
      dockerfile: build/smtp/Dockerfile
    ports:
      - "${HTTP_SERVER}:${HTTP_SERVER}"
      - "${SMTP_SERVER}:${SMTP_SERVER}"
volumes: 
    data:
